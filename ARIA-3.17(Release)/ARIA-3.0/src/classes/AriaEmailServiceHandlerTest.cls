/**********************************************************************
Name:  AriaEmailServiceHandlerTest()
Copyright Â© 2012  Aria
============================================================================================================
Purpose:                                                                   
-------  
Tests the AriaEmailServiceHandler class methods.                                                      
============================================================================================================
History                                                                
-------                                                                
VERSION  AUTHOR                     DATE                DETAIL                        Change Request
   1.0 - Soliant Consulting (AB)    05/11/2012       INITIAL DEVELOPMENT           
 
***********************************************************************/

@isTest
private class AriaEmailServiceHandlerTest {

    static testMethod void testAccountDetailsEvent() {
        // setup test data
         
        // setup config
        AriaTestDataGenerator.createAndInsertDefaultConfigWithSuppFields();
        
        // Account
        Account a = AriaTestDataGenerator.getOneAccount();
         
        // add Aria fields to Account
        a.Aria_Id__c = '1188730';
        a.Aria_Transaction_ID__c = 1;
        a.Aria_Ignore_Provisioning_Emails__c = false;
        
        // update Account
        AriaUtil.SUPPRESS_ACCOUNT_UPDATE_CALLOUT = true;
        update a;

        // Create a new email
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        email.subject = 'Account Provisioning';
        env.fromAddress = 'provisioning@ariasystems.net';
        email.plainTextBody = 'Account Provisioning Update\n-----------------------------------\nThis provisioning message was generated by the Aria STAGING system\n-----------------------------------\n\nRequest Data\n-----------------------------------\nVersion: 2\nSender: A\nTransaction ID: 25985757\nAction: M\nClass: A\n\nAccount Data\n-----------------------------------\nClient Number: 38000\nAccount Number: 1188730\nUser ID: ariat26@ariaphase2.com\nPassword: x1ddc8J91x\nPIN:\nQuestion:\nAnswer:\nPlan Number: 10119018\nPlan Name: SF Tier Test\nPlan Units: 1\nStatus Code: 1\nQueued Status Code:\nResponsibility Level: 1\nSenior Account Number:\nNotify Method: 6\nCurrency: usd\nTest Acct: N\nClient Acct ID:\nPromo Code:\n\nAccount Contact\n-----------------------------------\nFirst Name: Artie\nMI:\nLast Name: Brosius\nCompany Name:\nAddress1: 13 N. Peoria St.\nAddress2: Suite 2H\nCity: Chicago\nState/Province:\nLocality:\nPostal Code: 60607\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (312) 863-1234\nWork Phone Ext:\nCell Phone: (312) 863-0001\nEmail: abrosius@soiiantconsulting.com\n\nBilling Data\n-----------------------------------\nFirst Name: Tom\nMI:\nLast Name: Burre\nCompany Name:\nAddress1: 101 South Ellsworth Avenue\nAddress2: Suite 250\nCity: San Mateo\nState/Province:\nLocality:\nPostal Code: 94401\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (650) 340-1779\nWork Phone Ext:\nCell Phone: (234) 567-890\nEmail: tburre@soiiantconsulting.com\nPay Method: -1\nCC Suffix:\nCC Exp MM:\nCC Exp YYYY:\nBank Acct Suffix:\nBank Routing Number:\n\nAccount Dates\n-----------------------------------\nBill Day: 21\nCreated: 2010-08-21\nNext Bill Date: 2012-10-21\nLast Bill Date: 2012-09-21\nBill Thru Date: 2012-10-20\nUsage Bill Thru Date: 2012-09-20\nPlan Date: 2010-08-21\nStatus Date: 2012-09-17\nNext Dunning Date:\nQueued Status Change Date:\n\nSupplemental Plans\n-----------------------------------\nSupp Plan 1 Number: 10005626\nSupp Plan 1 Name: 12345678901234567\nSupp Plan 1 Status: 1\nSupp Plan 1 Activation Date: 2012-09-09\nSupp Plan 1 Termination Date:\nSupp Plan 1 Units: 1\nSupp Plan 1 Queued Units:\nSupp Plan 1 Units Change Date:\nSupp Plan 1 Next Bill Date: 2012-10-21\nSupp Plan 1 Last Bill Date: 2012-09-21\nSupp Plan 1 Bill Thru Date: 2012-10-20\nSupp Plan 1 Bill Day: 21\nSupp Plan 1 Usage Bill Thru Date: 2012-09-20\nSupp Plan 2 Number: 10012685\nSupp Plan 2 Name: monthly plan\nSupp Plan 2 Status: 1\nSupp Plan 2 Activation Date: 2012-08-26\nSupp Plan 2 Termination Date:\nSupp Plan 2 Units: 1\nSupp Plan 2 Queued Units:\nSupp Plan 2 Units Change Date:\nSupp Plan 2 Next Bill Date: 2012-10-21\nSupp Plan 2 Last Bill Date: 2012-09-21\nSupp Plan 2 Bill Thru Date: 2012-10-20\nSupp Plan 2 Bill Day: 21\nSupp Plan 2 Usage Bill Thru Date: 2012-09-20\nSupp Plan 3 Number: 10136879\nSupp Plan 3 Name: SF Supplemental\nSupp Plan 3 Status: -1\nSupp Plan 3 Activation Date: 2012-08-26\nSupp Plan 3 Termination Date: 2012-08-26\nSupp Plan 3 Units: 1\nSupp Plan 3 Queued Units:\nSupp Plan 3 Units Change Date:\nSupp Plan 3 Next Bill Date: 2012-10-21\nSupp Plan 3 Last Bill Date: 2012-09-21\nSupp Plan 3 Bill Thru Date: 2012-10-20\nSupp Plan 3 Bill Day: 21\nSupp Plan 3 Usage Bill Thru Date: 2012-09-20\n\nSupplemental Fields\n-----------------------------------\nField 1 Name: Shipping Preferences\nField 1 Value: Fed Ex\nField 2 Name: CustomBoolean\nField 2 Value: Val3\nField 3 Name: AriaCustom\nField 3 Value: yo\nField 4 Name: IP Last\nField 4 Value: 192.128.1.1\nField 5 Name: AriaCustom2\nField 5 Value: hello from Salesforce\nField 6 Name: FlavorRadioBtn\nField 6 Value: Vanilla\nField 7 Name: ColorSelectBox\nField 7 Value: blue\n\nAccount Contracts\n-----------------------------------\n\nEvents\n-----------------------------------\nEvent 1 ID: 102\nEvent 1 Label: Account Administrative Contact Modified\n\n';
        
       Aria_Configuration_Options__c afg=new Aria_Configuration_Options__c(SettingKey__c = 'Account Search',SettingValue1__c= 'Account Search by ==>Account Name,Account Name ==>True,Account Owner Contact ==> True,Account Billing Contact ==> True,RecordSelection==> Last Modified Date');
       insert afg;
       system.debug('afg-------------->' + afg);
        
        Test.startTest();
       
        AriaEmailServiceHandler handler1 = new AriaEmailServiceHandler();
        handler1.skipIsValidTest = false;
         Account acc = handler1.a;
         
        Messaging.InboundEmailResult result1 = handler1.handleInboundEmail(email, env );  
        
        Set<String> messages1 = new Set<String>();
        if(result1 != null){
            for (String message : result1.message.split('\n')) {
                messages1.add(message);
            }
        }
        
        // call the method
        AriaEmailServiceHandler handler = new AriaEmailServiceHandler();
        handler.skipIsValidTest = true;
        Messaging.InboundEmailResult result = handler.handleInboundEmail(email, env );  
        
        Set<String> messages = new Set<String>();
        if(result != null){
            for (String message : result.message.split('\n')) {
                messages.add(message);
            }
        }
          
        //System.assert(messages.contains('Requesting Account Details Refresh'));
         
         
        Test.stopTest();
    }

    static testMethod void testSuppFieldEvent() {
        // setup test data
         
        // setup config
        AriaTestDataGenerator.createAndInsertDefaultConfigWithSuppFields();
        
        // Account
        Account a = AriaTestDataGenerator.getOneAccount();
         
        // add Aria fields to Account
        a.Aria_Id__c = '1188730';
        a.Aria_Transaction_ID__c = 1;
        a.Aria_Ignore_Provisioning_Emails__c = false;
        
        // update Account
        AriaUtil.SUPPRESS_ACCOUNT_UPDATE_CALLOUT = true;
        update a;

        // Create a new email
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        email.subject = 'Account Provisioning';
        env.fromAddress = 'provisioning@ariasystems.net';
        email.plainTextBody = 'Account Provisioning Update\n-----------------------------------\nThis provisioning message was generated by the Aria STAGING system\n-----------------------------------\n\nRequest Data\n-----------------------------------\nVersion: 2\nSender: A\nTransaction ID: 25985757\nAction: M\nClass: A\n\nAccount Data\n-----------------------------------\nClient Number: 38000\nAccount Number: 1188730\nUser ID: ariat26@ariaphase2.com\nPassword: x1ddc8J91x\nPIN:\nQuestion:\nAnswer:\nPlan Number: 10119018\nPlan Name: SF Tier Test\nPlan Units: 1\nStatus Code: 1\nQueued Status Code:\nResponsibility Level: 1\nSenior Account Number:\nNotify Method: 6\nCurrency: usd\nTest Acct: N\nClient Acct ID:\nPromo Code:\n\nAccount Contact\n-----------------------------------\nFirst Name: Artie\nMI:\nLast Name: Brosius\nCompany Name:\nAddress1: 13 N. Peoria St.\nAddress2: Suite 2H\nCity: Chicago\nState/Province:\nLocality:\nPostal Code: 60607\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (312) 863-1234\nWork Phone Ext:\nCell Phone: (312) 863-0001\nEmail: abrosius@soiiantconsulting.com\n\nBilling Data\n-----------------------------------\nFirst Name: Tom\nMI:\nLast Name: Burre\nCompany Name:\nAddress1: 101 South Ellsworth Avenue\nAddress2: Suite 250\nCity: San Mateo\nState/Province:\nLocality:\nPostal Code: 94401\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (650) 340-1779\nWork Phone Ext:\nCell Phone: (234) 567-890\nEmail: tburre@soiiantconsulting.com\nPay Method: -1\nCC Suffix:\nCC Exp MM:\nCC Exp YYYY:\nBank Acct Suffix:\nBank Routing Number:\n\nAccount Dates\n-----------------------------------\nBill Day: 21\nCreated: 2010-08-21\nNext Bill Date: 2012-10-21\nLast Bill Date: 2012-09-21\nBill Thru Date: 2012-10-20\nUsage Bill Thru Date: 2012-09-20\nPlan Date: 2010-08-21\nStatus Date: 2012-09-17\nNext Dunning Date:\nQueued Status Change Date:\n\nSupplemental Plans\n-----------------------------------\nSupp Plan 1 Number: 10005626\nSupp Plan 1 Name: 12345678901234567\nSupp Plan 1 Status: 1\nSupp Plan 1 Activation Date: 2012-09-09\nSupp Plan 1 Termination Date:\nSupp Plan 1 Units: 1\nSupp Plan 1 Queued Units:\nSupp Plan 1 Units Change Date:\nSupp Plan 1 Next Bill Date: 2012-10-21\nSupp Plan 1 Last Bill Date: 2012-09-21\nSupp Plan 1 Bill Thru Date: 2012-10-20\nSupp Plan 1 Bill Day: 21\nSupp Plan 1 Usage Bill Thru Date: 2012-09-20\nSupp Plan 2 Number: 10012685\nSupp Plan 2 Name: monthly plan\nSupp Plan 2 Status: 1\nSupp Plan 2 Activation Date: 2012-08-26\nSupp Plan 2 Termination Date:\nSupp Plan 2 Units: 1\nSupp Plan 2 Queued Units:\nSupp Plan 2 Units Change Date:\nSupp Plan 2 Next Bill Date: 2012-10-21\nSupp Plan 2 Last Bill Date: 2012-09-21\nSupp Plan 2 Bill Thru Date: 2012-10-20\nSupp Plan 2 Bill Day: 21\nSupp Plan 2 Usage Bill Thru Date: 2012-09-20\nSupp Plan 3 Number: 10136879\nSupp Plan 3 Name: SF Supplemental\nSupp Plan 3 Status: -1\nSupp Plan 3 Activation Date: 2012-08-26\nSupp Plan 3 Termination Date: 2012-08-26\nSupp Plan 3 Units: 1\nSupp Plan 3 Queued Units:\nSupp Plan 3 Units Change Date:\nSupp Plan 3 Next Bill Date: 2012-10-21\nSupp Plan 3 Last Bill Date: 2012-09-21\nSupp Plan 3 Bill Thru Date: 2012-10-20\nSupp Plan 3 Bill Day: 21\nSupp Plan 3 Usage Bill Thru Date: 2012-09-20\n\nSupplemental Fields\n-----------------------------------\nField 1 Name: Shipping Preferences\nField 1 Value: Fed Ex\nField 2 Name: CustomBoolean\nField 2 Value: Val3\nField 3 Name: AriaCustom\nField 3 Value: yo\nField 4 Name: IP Last\nField 4 Value: 192.128.1.1\nField 5 Name: AriaCustom2\nField 5 Value: hello from Salesforce\nField 6 Name: FlavorRadioBtn\nField 6 Value: Vanilla\nField 7 Name: ColorSelectBox\nField 7 Value: blue\n\nAccount Contracts\n-----------------------------------\n\nEvents\n-----------------------------------\nEvent 1 ID: 119\nEvent 1 Label: Account Supplemental Field Value Modified\n\n';
        
        
        Test.startTest();
        
        // call the method
        AriaEmailServiceHandler handler = new AriaEmailServiceHandler();
        handler.skipIsValidTest = true;
        Messaging.InboundEmailResult result = handler.handleInboundEmail(email, env );  
        
        Set<String> messages = new Set<String>();
        if(result != null){
            for (String message : result.message.split('\n')) {
                messages.add(message);
            }
        }
          
        //System.assert(messages.contains('Requesting Supp Fields Refresh'));
         
         
        Test.stopTest();
    }

    static testMethod void testAccountPlansEvent() {
        // setup test data
         
        // setup config
        AriaTestDataGenerator.createAndInsertDefaultConfigWithSuppFields();
        
        // Account
        Account a = AriaTestDataGenerator.getOneAccount();
         
        // add Aria fields to Account
        a.Aria_Id__c = '1188730';
        a.Aria_Transaction_ID__c = 1;
        a.Aria_Ignore_Provisioning_Emails__c = false;
        
        // update Account
        AriaUtil.SUPPRESS_ACCOUNT_UPDATE_CALLOUT = true;
        update a;

        // Create a new email
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        email.subject = 'Account Provisioning';
        env.fromAddress = 'provisioning@ariasystems.net';
        email.plainTextBody = 'Account Provisioning Update\n-----------------------------------\nThis provisioning message was generated by the Aria STAGING system\n-----------------------------------\n\nRequest Data\n-----------------------------------\nVersion: 2\nSender: A\nTransaction ID: 25985757\nAction: M\nClass: A\n\nAccount Data\n-----------------------------------\nClient Number: 38000\nAccount Number: 1188730\nUser ID: ariat26@ariaphase2.com\nPassword: x1ddc8J91x\nPIN:\nQuestion:\nAnswer:\nPlan Number: 10119018\nPlan Name: SF Tier Test\nPlan Units: 1\nStatus Code: 1\nQueued Status Code:\nResponsibility Level: 1\nSenior Account Number:\nNotify Method: 6\nCurrency: usd\nTest Acct: N\nClient Acct ID:\nPromo Code:\n\nAccount Contact\n-----------------------------------\nFirst Name: Artie\nMI:\nLast Name: Brosius\nCompany Name:\nAddress1: 13 N. Peoria St.\nAddress2: Suite 2H\nCity: Chicago\nState/Province:\nLocality:\nPostal Code: 60607\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (312) 863-1234\nWork Phone Ext:\nCell Phone: (312) 863-0001\nEmail: abrosius@soiiantconsulting.com\n\nBilling Data\n-----------------------------------\nFirst Name: Tom\nMI:\nLast Name: Burre\nCompany Name:\nAddress1: 101 South Ellsworth Avenue\nAddress2: Suite 250\nCity: San Mateo\nState/Province:\nLocality:\nPostal Code: 94401\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (650) 340-1779\nWork Phone Ext:\nCell Phone: (234) 567-890\nEmail: tburre@soiiantconsulting.com\nPay Method: -1\nCC Suffix:\nCC Exp MM:\nCC Exp YYYY:\nBank Acct Suffix:\nBank Routing Number:\n\nAccount Dates\n-----------------------------------\nBill Day: 21\nCreated: 2010-08-21\nNext Bill Date: 2012-10-21\nLast Bill Date: 2012-09-21\nBill Thru Date: 2012-10-20\nUsage Bill Thru Date: 2012-09-20\nPlan Date: 2010-08-21\nStatus Date: 2012-09-17\nNext Dunning Date:\nQueued Status Change Date:\n\nSupplemental Plans\n-----------------------------------\nSupp Plan 1 Number: 10005626\nSupp Plan 1 Name: 12345678901234567\nSupp Plan 1 Status: 1\nSupp Plan 1 Activation Date: 2012-09-09\nSupp Plan 1 Termination Date:\nSupp Plan 1 Units: 1\nSupp Plan 1 Queued Units:\nSupp Plan 1 Units Change Date:\nSupp Plan 1 Next Bill Date: 2012-10-21\nSupp Plan 1 Last Bill Date: 2012-09-21\nSupp Plan 1 Bill Thru Date: 2012-10-20\nSupp Plan 1 Bill Day: 21\nSupp Plan 1 Usage Bill Thru Date: 2012-09-20\nSupp Plan 2 Number: 10012685\nSupp Plan 2 Name: monthly plan\nSupp Plan 2 Status: 1\nSupp Plan 2 Activation Date: 2012-08-26\nSupp Plan 2 Termination Date:\nSupp Plan 2 Units: 1\nSupp Plan 2 Queued Units:\nSupp Plan 2 Units Change Date:\nSupp Plan 2 Next Bill Date: 2012-10-21\nSupp Plan 2 Last Bill Date: 2012-09-21\nSupp Plan 2 Bill Thru Date: 2012-10-20\nSupp Plan 2 Bill Day: 21\nSupp Plan 2 Usage Bill Thru Date: 2012-09-20\nSupp Plan 3 Number: 10136879\nSupp Plan 3 Name: SF Supplemental\nSupp Plan 3 Status: -1\nSupp Plan 3 Activation Date: 2012-08-26\nSupp Plan 3 Termination Date: 2012-08-26\nSupp Plan 3 Units: 1\nSupp Plan 3 Queued Units:\nSupp Plan 3 Units Change Date:\nSupp Plan 3 Next Bill Date: 2012-10-21\nSupp Plan 3 Last Bill Date: 2012-09-21\nSupp Plan 3 Bill Thru Date: 2012-10-20\nSupp Plan 3 Bill Day: 21\nSupp Plan 3 Usage Bill Thru Date: 2012-09-20\n\nSupplemental Fields\n-----------------------------------\nField 1 Name: Shipping Preferences\nField 1 Value: Fed Ex\nField 2 Name: CustomBoolean\nField 2 Value: Val3\nField 3 Name: AriaCustom\nField 3 Value: yo\nField 4 Name: IP Last\nField 4 Value: 192.128.1.1\nField 5 Name: AriaCustom2\nField 5 Value: hello from Salesforce\nField 6 Name: FlavorRadioBtn\nField 6 Value: Vanilla\nField 7 Name: ColorSelectBox\nField 7 Value: blue\n\nAccount Contracts\n-----------------------------------\n\nEvents\n-----------------------------------\nEvent 1 ID: 107\nEvent 1 Label: Account Master Service Plan Modified\n\n';
        
        Test.startTest();
        
        // call the method
        AriaEmailServiceHandler handler = new AriaEmailServiceHandler();
        handler.skipIsValidTest = true;
        Messaging.InboundEmailResult result = handler.handleInboundEmail(email, env );  
        
        Set<String> messages = new Set<String>();
        if(result != null){
            for (String message : result.message.split('\n')) {
                messages.add(message);
            }
        }
          
        //System.assert(messages.contains('Requesting Account Plans Refresh'));
         
         
        Test.stopTest();
    }
    
    
    static testMethod void testAddNewAccount() {
        // setup test data
         
        // setup config
        AriaTestDataGenerator.createAndInsertDefaultConfigWithSuppFields();
        // inserting new general config record for account searching in email handler
        insert new Aria_Configuration_Options__c(SettingKey__c = 'Account Search',SettingValue1__c= 'Account Search by ==>Account Name,Account Name ==>True,Account Owner Contact ==> True,Account Billing Contact ==> True,RecordSelection==> Last Modified Date');
        Account a = AriaTestDataGenerator.getOneAccount();
        Contact con = AriaTestDataGenerator.getOneContact();
        //add an Aria Id to simulate a SF Account that has already been synced once to Aria
        //a.Aria_Id__c = '1188730';
        //a.Name = 'Aria Account';
        a.Aria_Account_Contact__c = con.Id;
        a.Aria_Billing_Contact__c = con.Id;
        a.Aria_Ignore_Provisioning_Emails__c = false;
        AriaUtil.SUPPRESS_ACCOUNT_UPDATE_CALLOUT = true;
        update a;
        
        // Create a new email
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        email.subject = 'Account Provisioning';
        env.fromAddress = 'provisioning@ariasystems.net';
        email.plainTextBody = 'Account Provisioning Update\n-----------------------------------\nThis provisioning message was generated by the Aria STAGING system\n-----------------------------------\n\nRequest Data\n-----------------------------------\nVersion: 2\nSender: A\nTransaction ID: 25985757\nAction: M\nClass: A\n\nAccount Data\n-----------------------------------\nClient Number: 38000\nAccount Number: 1188730\nUser ID: ariat26@ariaphase2.com\nPassword: x1ddc8J91x\nPIN:\nQuestion:\nAnswer:\nPlan Number: 10119018\nPlan Name: SF Tier Test\nPlan Units: 1\nStatus Code: 1\nQueued Status Code:\nResponsibility Level: 1\nSenior Account Number:\nNotify Method: 6\nCurrency: usd\nTest Acct: N\nClient Acct ID:\nPromo Code:\n\nAccount Contact\n-----------------------------------\nFirst Name: Artie\nMI:\nLast Name: Brosius\nCompany Name:\nAddress1: 13 N. Peoria St.\nAddress2: Suite 2H\nCity: Chicago\nState/Province:\nLocality:\nPostal Code: 60607\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (312) 863-1234\nWork Phone Ext:\nCell Phone: (312) 863-0001\nEmail: abrosius@soiiantconsulting.com\n\nBilling Data\n-----------------------------------\nFirst Name: Tom\nMI:\nLast Name: Burre\nCompany Name:\nAddress1: 101 South Ellsworth Avenue\nAddress2: Suite 250\nCity: San Mateo\nState/Province:\nLocality:\nPostal Code: 94401\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (650) 340-1779\nWork Phone Ext:\nCell Phone: (234) 567-890\nEmail: tburre@soiiantconsulting.com\nPay Method: -1\nCC Suffix:\nCC Exp MM:\nCC Exp YYYY:\nBank Acct Suffix:\nBank Routing Number:\n\nAccount Dates\n-----------------------------------\nBill Day: 21\nCreated: 2010-08-21\nNext Bill Date: 2012-10-21\nLast Bill Date: 2012-09-21\nBill Thru Date: 2012-10-20\nUsage Bill Thru Date: 2012-09-20\nPlan Date: 2010-08-21\nStatus Date: 2012-09-17\nNext Dunning Date:\nQueued Status Change Date:\n\nSupplemental Plans\n-----------------------------------\nSupp Plan 1 Number: 10005626\nSupp Plan 1 Name: 12345678901234567\nSupp Plan 1 Status: 1\nSupp Plan 1 Activation Date: 2012-09-09\nSupp Plan 1 Termination Date:\nSupp Plan 1 Units: 1\nSupp Plan 1 Queued Units:\nSupp Plan 1 Units Change Date:\nSupp Plan 1 Next Bill Date: 2012-10-21\nSupp Plan 1 Last Bill Date: 2012-09-21\nSupp Plan 1 Bill Thru Date: 2012-10-20\nSupp Plan 1 Bill Day: 21\nSupp Plan 1 Usage Bill Thru Date: 2012-09-20\nSupp Plan 2 Number: 10012685\nSupp Plan 2 Name: monthly plan\nSupp Plan 2 Status: 1\nSupp Plan 2 Activation Date: 2012-08-26\nSupp Plan 2 Termination Date:\nSupp Plan 2 Units: 1\nSupp Plan 2 Queued Units:\nSupp Plan 2 Units Change Date:\nSupp Plan 2 Next Bill Date: 2012-10-21\nSupp Plan 2 Last Bill Date: 2012-09-21\nSupp Plan 2 Bill Thru Date: 2012-10-20\nSupp Plan 2 Bill Day: 21\nSupp Plan 2 Usage Bill Thru Date: 2012-09-20\nSupp Plan 3 Number: 10136879\nSupp Plan 3 Name: SF Supplemental\nSupp Plan 3 Status: -1\nSupp Plan 3 Activation Date: 2012-08-26\nSupp Plan 3 Termination Date: 2012-08-26\nSupp Plan 3 Units: 1\nSupp Plan 3 Queued Units:\nSupp Plan 3 Units Change Date:\nSupp Plan 3 Next Bill Date: 2012-10-21\nSupp Plan 3 Last Bill Date: 2012-09-21\nSupp Plan 3 Bill Thru Date: 2012-10-20\nSupp Plan 3 Bill Day: 21\nSupp Plan 3 Usage Bill Thru Date: 2012-09-20\n\nSupplemental Fields\n-----------------------------------\nField 1 Name: Shipping Preferences\nField 1 Value: Fed Ex\nField 2 Name: CustomBoolean\nField 2 Value: Val3\nField 3 Name: AriaCustom\nField 3 Value: yo\nField 4 Name: IP Last\nField 4 Value: 192.128.1.1\nField 5 Name: AriaCustom2\nField 5 Value: hello from Salesforce\nField 6 Name: FlavorRadioBtn\nField 6 Value: Vanilla\nField 7 Name: ColorSelectBox\nField 7 Value: blue\n\nAccount Contracts\n-----------------------------------\n\nEvents\n-----------------------------------\nEvent 1 ID: 101\nEvent 1 Label: Account Created\n\n';
        
        Test.startTest();
        
        // call the method
        AriaEmailServiceHandler handler = new AriaEmailServiceHandler();
        handler.skipIsValidTest = true;
        Messaging.InboundEmailResult result = handler.handleInboundEmail(email, env );  
        
        Set<String> messages = new Set<String>();
        if(result != null){
            for (String message : result.message.split('\n')) {
                messages.add(message);
            }
        }
          
        //System.assert(messages.contains('New Account Created'));
        //System.assert(messages.contains('Requesting Account Details Refresh'));
        //System.assert(messages.contains('Requesting Supp Fields Refresh'));
        //System.assert(messages.contains('Requesting Account Plans Refresh'));
         
        List<Account> accs = [SELECT Id, Name FROM Account];
        //System.assertEquals(1, accs.size());
        System.assert( accs.size()>0);
        System.assert(accs[0].Name.contains('Acme TEST 11111111'));
         
        Test.stopTest();
    }
    
    
    static testMethod void testAddNewAccounttets() {
        // setup test data
         
        // setup config
        AriaTestDataGenerator.createAndInsertDefaultConfigWithSuppFields();
        
        Account a = AriaTestDataGenerator.getAccountList()[0];
        //add an Aria Id to simulate a SF Account that has already been synced once to Aria
        a.Aria_Id__c = '1188730';
        a.Name = 'Aria Account';
        a.Aria_Ignore_Provisioning_Emails__c = false;
        AriaUtil.SUPPRESS_ACCOUNT_UPDATE_CALLOUT = true;
        update a;
        
        // Create a new email
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        email.subject = 'Account Provisioning';
        env.fromAddress = 'provisioning@ariasystems.net';
        email.plainTextBody = 'Account Provisioning Update\n-----------------------------------\nThis provisioning message was generated by the Aria STAGING system\n-----------------------------------\n\nRequest Data\n-----------------------------------\nVersion: 2\nSender: A\nTransaction ID: 25985757\nAction: M\nClass: A\n\nAccount Data: 11111111\n-----------------------------------\nClient Number: 38000\nAccount Number: 111111\nUser ID: ariat26@ariaphase2.com\nPassword: x1ddc8J91x\nPIN:\nQuestion:\nAnswer:\nPlan Number: 10119018\nPlan Name: SF Tier Test\nPlan Units: 1\nStatus Code: 1\nQueued Status Code:\nResponsibility Level: 1\nSenior Account Number:\nNotify Method: 6\nCurrency: usd\nTest Acct: N\nClient Acct ID:\nPromo Code:\n\nAccount Contact\n-----------------------------------\nFirst Name: Artie\nMI:\nLast Name: Brosius\nCompany Name:\nAddress1: 13 N. Peoria St.\nAddress2: Suite 2H\nCity: Chicago\nState/Province:\nLocality:\nPostal Code: 60607\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (312) 863-1234\nWork Phone Ext:\nCell Phone: (312) 863-0001\nEmail: abrosius@soiiantconsulting.com\n\nBilling Data\n-----------------------------------\nFirst Name: Tom\nMI:\nLast Name: Burre\nCompany Name:\nAddress1: 101 South Ellsworth Avenue\nAddress2: Suite 250\nCity: San Mateo\nState/Province:\nLocality:\nPostal Code: 94401\nCountry: US\nPhone: (312) 863-0000\nPhone Ext:\nWork Phone: (650) 340-1779\nWork Phone Ext:\nCell Phone: (234) 567-890\nEmail: tburre@soiiantconsulting.com\nPay Method: -1\nCC Suffix:\nCC Exp MM:\nCC Exp YYYY:\nBank Acct Suffix:\nBank Routing Number:\n\nAccount Dates\n-----------------------------------\nBill Day: 21\nCreated: 2010-08-21\nNext Bill Date: 2012-10-21\nLast Bill Date: 2012-09-21\nBill Thru Date: 2012-10-20\nUsage Bill Thru Date: 2012-09-20\nPlan Date: 2010-08-21\nStatus Date: 2012-09-17\nNext Dunning Date:\nQueued Status Change Date:\n\nSupplemental Plans\n-----------------------------------\nSupp Plan 1 Number: 10005626\nSupp Plan 1 Name: 12345678901234567\nSupp Plan 1 Status: 1\nSupp Plan 1 Activation Date: 2012-09-09\nSupp Plan 1 Termination Date:\nSupp Plan 1 Units: 1\nSupp Plan 1 Queued Units:\nSupp Plan 1 Units Change Date:\nSupp Plan 1 Next Bill Date: 2012-10-21\nSupp Plan 1 Last Bill Date: 2012-09-21\nSupp Plan 1 Bill Thru Date: 2012-10-20\nSupp Plan 1 Bill Day: 21\nSupp Plan 1 Usage Bill Thru Date: 2012-09-20\nSupp Plan 2 Number: 10012685\nSupp Plan 2 Name: monthly plan\nSupp Plan 2 Status: 1\nSupp Plan 2 Activation Date: 2012-08-26\nSupp Plan 2 Termination Date:\nSupp Plan 2 Units: 1\nSupp Plan 2 Queued Units:\nSupp Plan 2 Units Change Date:\nSupp Plan 2 Next Bill Date: 2012-10-21\nSupp Plan 2 Last Bill Date: 2012-09-21\nSupp Plan 2 Bill Thru Date: 2012-10-20\nSupp Plan 2 Bill Day: 21\nSupp Plan 2 Usage Bill Thru Date: 2012-09-20\nSupp Plan 3 Number: 10136879\nSupp Plan 3 Name: SF Supplemental\nSupp Plan 3 Status: -1\nSupp Plan 3 Activation Date: 2012-08-26\nSupp Plan 3 Termination Date: 2012-08-26\nSupp Plan 3 Units: 1\nSupp Plan 3 Queued Units:\nSupp Plan 3 Units Change Date:\nSupp Plan 3 Next Bill Date: 2012-10-21\nSupp Plan 3 Last Bill Date: 2012-09-21\nSupp Plan 3 Bill Thru Date: 2012-10-20\nSupp Plan 3 Bill Day: 21\nSupp Plan 3 Usage Bill Thru Date: 2012-09-20\n\nSupplemental Fields\n-----------------------------------\nField 1 Name: Shipping Preferences\nField 1 Value: Fed Ex\nField 2 Name: CustomBoolean\nField 2 Value: Val3\nField 3 Name: AriaCustom\nField 3 Value: yo\nField 4 Name: IP Last\nField 4 Value: 192.128.1.1\nField 5 Name: AriaCustom2\nField 5 Value: hello from Salesforce\nField 6 Name: FlavorRadioBtn\nField 6 Value: Vanilla\nField 7 Name: ColorSelectBox\nField 7 Value: blue\n\nAccount Contracts\n-----------------------------------\n\nEvents\n-----------------------------------\nEvent 1 ID: 101\nEvent 1 Label: Account Created\n\n';
        
        Test.startTest();
        
        // call the method
        AriaEmailServiceHandler handler = new AriaEmailServiceHandler();
        handler.skipIsValidTest = true;
        Messaging.InboundEmailResult result = handler.handleInboundEmail(email, env );  
        
        Set<String> messages = new Set<String>();
        if(result != null){
            for (String message : result.message.split('\n')) {
                messages.add(message);
            }
        }
          
        //System.assert(messages.contains('New Account Created'));
        //System.assert(messages.contains('Requesting Account Details Refresh'));
        //System.assert(messages.contains('Requesting Supp Fields Refresh'));
        //System.assert(messages.contains('Requesting Account Plans Refresh'));
         
        List<Account> accs = [SELECT Id, Name FROM Account];
        //System.assertEquals(1, accs.size());
        System.assert( accs.size()>0);
        System.assert(accs[0].Name.contains('Aria Account'));
         
        Test.stopTest();
    }
    /*
    static testMethod void test1(){
        Account acc = TestDataFactory.createTestRecordsForAccount(1)[0];
        TestDataFactory.createTestRecordsForAriaAccountRefreshQueue(1, acc.Id);
        
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();
        
        AriaEmailServiceHandler obj = new AriaEmailServiceHandler();
        
        Test.startTest();
            Messaging.InboundEmailResult result = edr.handleInboundEmail(email, env);
        Test.stopTest();
        
    }
    */
    static testMethod void testAddNewAccounttests() {
        AriaTestDataGenerator.createAndInsertDefaultConfigWithSuppFields();
        // Create a new email
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();
        email.subject = 'Account Provisioning';
        env.fromAddress = 'provisioning@ariasystems.net';
        email.plainTextBody = 'Account and Master Plan Instance Event Notification Update \n -------------------- \n This Event Notification message was generated by the Aria  system \n-----------------------------------\nRequest Data\n-----------------------------------\nVersion: 1\nSender: A\nTransaction ID: 53086237\nAction: A\nClass Name: A\n\nAccount Data\n-----------------------------------\nClient Number: 3286613\nAccount Number: 11141777\nClient Account ID:\nUser ID: 9535579\nPassword: $SH1$5000$8$68A061EEC28C2B69$32$0A2C90F4A11AC1FE3FAEE56546ABEDF9BC77DBF47B20266BF98CD9EC829F184C\nPIN:\n End Date: 2016-02-13\n\nEvents\n-----------------------------------\nEvent 1 ID: 701\nEvent 1 Label: Account Created';
        Test.startTest();
        AriaEmailServiceHandler handler = new AriaEmailServiceHandler();
        handler.skipIsValidTest = true;
        Messaging.InboundEmailResult result = handler.handleInboundEmail(email, env );  
        Test.stopTest();
    }
    
}